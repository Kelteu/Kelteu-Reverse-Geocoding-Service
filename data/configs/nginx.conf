daemon off;

load_module "modules/ngx_http_geoip_module.so";
load_module "modules/ngx_http_headers_more_filter_module.so";

events {}
http {
    server_tokens off;
    more_clear_headers Server;
    
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    access_log /logs/access.log;
    #access_log /dev/stdout;
    error_log /logs/error.log debug;
    #error_log /dev/stdout debug;
    # GeoIP data obtained from https://mailfud.org/geoip-legacy/
    geoip_country /etc/nginx/GeoIP.dat;
    geoip_city /etc/nginx/GeoIPCity.dat;
    #geoip_proxy 192.168.1.0/24;
    geoip_proxy_recursive on;
    
    upstream backend {
        server krgs:8080;
    }
    client_max_body_size 3M;

    server {
        listen       80;
        include /etc/nginx/mime.types;
	
		location /swagger-ui/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_pass http://backend;
        }
      
		location ~ ^/(ip) {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header dCountryCode $geoip_country_code;
            proxy_set_header dCountryName $geoip_country_name;
            proxy_set_header dCity $geoip_city;
            proxy_set_header dRegion $geoip_region;
            proxy_set_header dRegionName $geoip_region_name;
            proxy_set_header dlat $geoip_latitude;
            proxy_set_header dlng $geoip_longitude;
            proxy_http_version 1.1;
            proxy_pass http://backend;
		}
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_pass http://backend/;
        }
        # hide default nginx error pages
		error_page
    	301 302 303 304 307 308
    	400 401 402 403 404 405 406 408 409 410 411 412 413 414 415 416 421 429
    	500 501 502 503 504 505 507
    	@404_json;

        location @404_json {
            default_type application/json;
            return 404 '{"message": "404 Not Found"}';
        }
    }
}
